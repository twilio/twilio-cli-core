{
  "components": {
    "schemas": {
      "video.v1.composition": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "audio_sources": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "audio_sources_excluded": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bitrate": {
            "type": "integer"
          },
          "date_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_deleted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "format": {
            "enum": [
              "mp4",
              "webm"
            ],
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "resolution": {
            "type": "string"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CJ[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "status": {
            "enum": [
              "enqueued",
              "processing",
              "completed",
              "deleted",
              "failed"
            ],
            "type": "string"
          },
          "trim": {
            "type": "boolean"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "video_layout": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "video.v1.composition_hook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "audio_sources": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "audio_sources_excluded": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "format": {
            "enum": [
              "mp4",
              "webm"
            ],
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^HK[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status_callback": {
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "status_callback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "trim": {
            "type": "boolean"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "video_layout": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "video.v1.composition_settings": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "aws_credentials_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "aws_s3_url": {
            "format": "uri",
            "type": "string"
          },
          "aws_storage_enabled": {
            "type": "boolean"
          },
          "encryption_enabled": {
            "type": "boolean"
          },
          "encryption_key_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.recording": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "codec": {
            "enum": [
              "VP8",
              "H264",
              "OPUS",
              "PCMU"
            ],
            "type": "string"
          },
          "container_format": {
            "enum": [
              "mka",
              "mkv"
            ],
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "nullable": true,
            "type": "integer"
          },
          "grouping_sids": {
            "type": "object"
          },
          "links": {
            "type": "object"
          },
          "offset": {
            "type": "integer"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RT[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "source_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "processing",
              "completed",
              "deleted",
              "failed"
            ],
            "type": "string"
          },
          "track_name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "audio",
              "video",
              "data"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.recording_settings": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "aws_credentials_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "aws_s3_url": {
            "format": "uri",
            "type": "string"
          },
          "aws_storage_enabled": {
            "type": "boolean"
          },
          "encryption_enabled": {
            "type": "boolean"
          },
          "encryption_key_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.room": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "nullable": true,
            "type": "integer"
          },
          "enable_turn": {
            "type": "boolean"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "max_participants": {
            "type": "integer"
          },
          "media_region": {
            "type": "string"
          },
          "record_participants_on_connect": {
            "type": "boolean"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "in-progress",
              "completed",
              "failed"
            ],
            "type": "string"
          },
          "status_callback": {
            "format": "uri",
            "type": "string"
          },
          "status_callback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "peer-to-peer",
              "group",
              "group-small"
            ],
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "video_codecs": {
            "items": {
              "enum": [
                "VP8",
                "H264"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "video.v1.room.room_participant": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "nullable": true,
            "type": "integer"
          },
          "end_time": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PA[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "connected",
              "disconnected"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.room.room_participant.room_participant_published_track": {
        "properties": {
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "kind": {
            "enum": [
              "audio",
              "video",
              "data"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "participant_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PA[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MT[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.room.room_participant.room_participant_subscribe_rule": {
        "properties": {
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "participant_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PA[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "rules": {
            "items": {
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "video.v1.room.room_participant.room_participant_subscribed_track": {
        "properties": {
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "kind": {
            "enum": [
              "audio",
              "video",
              "data"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "participant_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PA[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "publisher_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PA[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MT[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "video.v1.room.room_recording": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "codec": {
            "enum": [
              "VP8",
              "H264",
              "OPUS",
              "PCMU"
            ],
            "type": "string"
          },
          "container_format": {
            "enum": [
              "mka",
              "mkv"
            ],
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "nullable": true,
            "type": "integer"
          },
          "grouping_sids": {
            "type": "object"
          },
          "links": {
            "type": "object"
          },
          "offset": {
            "type": "integer"
          },
          "room_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RT[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "source_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "processing",
              "completed",
              "deleted",
              "failed"
            ],
            "type": "string"
          },
          "track_name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "audio",
              "video",
              "data"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/CompositionHooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "List of all Recording Composition Hooks.",
        "parameters": [
          {
            "description": "Only show Composition Hooks that are enabled or disabled.",
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Only show Composition Hooks created on or after this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Composition Hooks created before this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Composition Hooks with friendly name that match this case-insensitive string, of up to 100 characters in length. Filtering by partial friendly names is allowed, using wildcards (e.g. `*my*hook*`).",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "composition_hooks": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.composition_hook"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Friendly name of the Composition Hook to be shown in the console, must be unique per account and up to 100 characters.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag indicating if the Composition Hook is active. Possible values are `true` or `false`. When `true`, the Composition Hook will be triggered for every completed Group Room on this account. When `false`, the Composition Hook never triggers.",
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A JSON object defining the video layout of the Composition Hook in terms of regions. See the section [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for further information.",
            "in": "query",
            "name": "VideoLayout",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the Group Room had audio tracks.",
            "in": "query",
            "name": "AudioSources",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "An array of audio sources to exclude from the Composition Hook. Any new Composition triggered by the Composition Hook shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include zero or more Track names. These can be specified using wildcards (e.g. `student*`).",
            "in": "query",
            "name": "AudioSourcesExcluded",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A string representing the number of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: \n\n* `width >= 16 && width <= 1280`\n* `height >= 16 && height <= 1280`\n* `width * height <= 921,600`\n\nTypical values are: \n\n* HD = `1280x720`\n* PAL = `1024x576`\n* VGA = `640x480`\n* CIF = `320x240`\n\nNote that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.",
            "in": "query",
            "name": "Resolution",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container format of the Composition media files created by the Composition Hook. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "in": "query",
            "name": "Format",
            "required": false,
            "schema": {
              "enum": [
                "mp4",
                "webm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "When activated, clips all the intervals where there is no active media in the Compositions triggered by the Composition Hook. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition_hook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/CompositionHooks/{Sid}": {
      "delete": {
        "description": "Delete a Recording Composition Hook Instance resource identified by a `CompositionHookSid`.",
        "parameters": [
          {
            "description": "The Recording Composition Hook Sid that uniquely identifies the Recording Composition Hook to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a single Composition Hook Instance resource identified by a CompositionHookSid.",
        "parameters": [
          {
            "description": "The Composition Hook Sid that uniquely identifies the Composition Hook to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition_hook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "`HKxx\u2026xx` The system-generated 34-character string that uniquely identifies the Composition Hook to update, specified as a path parameter.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Friendly name of the Composition Hook to be shown in the console, must be unique per account and up to 100 characters.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag indicating if the Composition Hook is active. Possible values are `true` or `false`. When `true`, the Composition Hook will be triggered for every completed Group Room on this account. When `false`, the Composition Hook never triggers.",
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A JSON object defining the video layout of the Composition Hook in terms of regions. See the section [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for further information.",
            "in": "query",
            "name": "VideoLayout",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the Group Room had audio tracks.",
            "in": "query",
            "name": "AudioSources",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "An array of audio sources to exclude from the Composition Hook. Any new Composition triggered by the Composition Hook shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include zero or more Track names. These can be specified using wildcards (e.g. `student*`).",
            "in": "query",
            "name": "AudioSourcesExcluded",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "When activated, clips all the intervals where there is no active media in the Compositions triggered by the Composition Hook. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Container format of the Composition media files created by the Composition Hook. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "in": "query",
            "name": "Format",
            "required": false,
            "schema": {
              "enum": [
                "mp4",
                "webm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string representing the number of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: `width >= 16 && width <= 1280`, `height >= 16 && height <= 1280`, `width * height <= 921,600`. Typical values are: HD = `1280x720`, PAL = `1024x576`, VGA = `640x480`, CIF = `320x240`. Note that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.",
            "in": "query",
            "name": "Resolution",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition_hook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/CompositionSettings/Default": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition_settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Friendly name of the configuration to be shown in the console",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SID of the Stored Credential resource `CRxx`",
            "in": "query",
            "name": "AwsCredentialsSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "SID of the Public Key resource `CRxx`",
            "in": "query",
            "name": "EncryptionKeySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the external location where the compositions should be stored. We only support DNS-compliant URLs like `http://<my-bucket>.s3-<aws-region>.amazonaws.com/compositions`,  where `compositions` is the path where you want compositions to be stored.",
            "in": "query",
            "name": "AwsS3Url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "`true|false` When set to `true`, all Compositions will be written to the `AwsS3Url` specified above. When set to `false`, all Compositions will be stored in Twilio's cloud.",
            "in": "query",
            "name": "AwsStorageEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true|false` When set to `true`, all Compositions will be stored encrypted. Dafault value is `false`",
            "in": "query",
            "name": "EncryptionEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition_settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "friendly_name",
        "aws_storage_enabled",
        "encryption_enabled"
      ],
      "x-path-type": "instance"
    },
    "/v1/Compositions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "List of all Recording Compositions.",
        "parameters": [
          {
            "description": "Only show Compositions with the given status.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "enqueued",
                "processing",
                "completed",
                "deleted",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only show Compositions created on or after this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Compositions created before this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Compositions with the given Room SID.",
            "in": "query",
            "name": "RoomSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "compositions": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.composition"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Group Room SID owning the media tracks to be used as Composition sources.",
            "in": "query",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A JSON object defining the video layout of the Composition in terms of regions. See the section [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) below for further information.",
            "in": "query",
            "name": "VideoLayout",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "An array of audio sources to merge. All the specified sources must belong to the same Group Room. It can include: \n\n* Zero or more `RecordingTrackSid`\n* Zero or more `MediaTrackSid`\n* Zero or more `ParticipantSid`\n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`). The use of `[*]` has semantics \"all if any\" meaning zero or more (i.e. all) depending on whether the target room had audio tracks.",
            "in": "query",
            "name": "AudioSources",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "An array of audio sources to exclude from the Composition. Any new Composition shall include all audio sources specified in `AudioSources` except for the ones specified in `AudioSourcesExcluded`. This parameter may include: \n\n* Zero or more `RecordingTrackSid`\n* Zero or more `MediaTrackSid`\n* Zero or more `ParticipantSid`\n* Zero or more Track names. These can be specified using wildcards (e.g. `student*`)",
            "in": "query",
            "name": "AudioSourcesExcluded",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A string representing the number of pixels for rows (width) and columns (height) of the generated composed video. This string must have the format `{width}x{height}`. This parameter must comply with the following constraints: \n\n* `width >= 16 && width <= 1280`\n* `height >= 16 && height <= 1280`\n* `width * height <= 921,600`\n\nTypical values are: \n\n* HD = `1280x720`\n* PAL = `1024x576`\n* VGA = `640x480`\n* CIF = `320x240`\n\nNote that the `Resolution` implicitly imposes an aspect ratio to the resulting composition. When the original video tracks get constrained by this aspect ratio they are scaled-down to fit. You can find detailed information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `640x480`.",
            "in": "query",
            "name": "Resolution",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container format of the Composition media file. Can be any of the following: `mp4`, `webm`. The use of `mp4` or `webm` makes mandatory the specification of `AudioSources` and/or one `VideoLayout` element containing a valid `video_sources` list, otherwise an error is fired. Defaults to `webm`.",
            "in": "query",
            "name": "Format",
            "required": false,
            "schema": {
              "enum": [
                "mp4",
                "webm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A URL that Twilio sends asynchronous webhook requests to on every composition event. If not provided, status callback events will not be dispatched.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "When activated, clips all the Composition intervals where there is no active media. This results in shorter compositions in cases when the Room was created but no Participant joined for some time, or if all the Participants left the room and joined at a later stage, as those gaps will be removed. You can find further information in the [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) section. Defaults to `true`.",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "resolution",
        "format"
      ],
      "x-path-type": "list"
    },
    "/v1/Compositions/{Sid}": {
      "delete": {
        "description": "Delete a Recording Composition Instance resource identified by a `CompositionSid`.",
        "parameters": [
          {
            "description": "The Recording Composition Sid that uniquely identifies the Recording Composition to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a single Composition Instance resource identified by a CompositionSid.",
        "parameters": [
          {
            "description": "The Composition Sid that uniquely identifies the Composition to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CJ[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.composition"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "resolution",
        "format"
      ],
      "x-path-type": "instance"
    },
    "/v1/RecordingSettings/Default": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.recording_settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Friendly name of the configuration to be shown in the console",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SID of the Stored Credential resource `CRxx`",
            "in": "query",
            "name": "AwsCredentialsSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "SID of the Public Key resource `CRxx`",
            "in": "query",
            "name": "EncryptionKeySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the external location where the recordings should be stored. We only support DNS-compliant URLs like `http://<my-bucket>.s3-<aws-region>.amazonaws.com/recordings`, where `recordings` is the path where you want recordings to be stored.",
            "in": "query",
            "name": "AwsS3Url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "`true|false` When set to `true`, all Recordings will be written to the `AwsS3Url` specified above. When set to `false`, all Recordings will be stored in Twilio's cloud.",
            "in": "query",
            "name": "AwsStorageEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true|false` When set to `true`, all Recordings will be stored encrypted. Dafault value is `false`",
            "in": "query",
            "name": "EncryptionEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.recording_settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "friendly_name",
        "aws_storage_enabled",
        "encryption_enabled"
      ],
      "x-path-type": "instance"
    },
    "/v1/Recordings": {
      "description": "Single-track, single-media recordings",
      "get": {
        "description": "List of all Track Recordings.",
        "parameters": [
          {
            "description": "Only show Recordings with the given status.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only show the Recordings with the given source Sid (you can use this to filter Recordings by `TrackSid` for Video Room Recordings.",
            "in": "query",
            "name": "SourceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Only show Recordings that have this GroupingSid, which may include a ParticipantSid and/or a RoomSid.",
            "in": "query",
            "name": "GroupingSid",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Only show Recordings that started on or after this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Recordings that started before this ISO8601 date-time with timezone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Recordings that have this media type. Can be either `audio` or `video`.",
            "in": "query",
            "name": "MediaType",
            "required": false,
            "schema": {
              "enum": [
                "audio",
                "video",
                "data"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "recordings": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.recording"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "date_created",
        "status",
        "type",
        "duration",
        "codec"
      ],
      "x-path-type": "list"
    },
    "/v1/Recordings/{Sid}": {
      "delete": {
        "description": "Delete a Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "description": "The Recording Sid that uniquely identifies the Recording to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Single-track, single-media recordings",
      "get": {
        "description": "Returns a single Recording Instance resource identified by a RecordingSid.",
        "parameters": [
          {
            "description": "The Recording Sid that uniquely identifies the Recording to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "date_created",
        "status",
        "type",
        "duration",
        "codec"
      ],
      "x-path-type": "instance"
    },
    "/v1/Rooms": {
      "description": "Video rooms with one or more participants",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "Only show Rooms with the given status: `in-progress` (default), or `completed`",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only show Rooms with the provided Name.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only show Rooms that started on or after this date, given as `YYYY-MM-DD`.",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Rooms that started before this date, given as `YYYY-MM-DD`.",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rooms": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Deprecated.  Enable [Twilio's Network Traversal TURN service](https://www.twilio.com/stun-turn). TURN service is used when direct peer-to-peer media connections cannot be established due to firewall restrictions. This setting only applies to Rooms with type `peer-to-peer`.",
            "in": "query",
            "name": "EnableTurn",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Type of room, either `peer-to-peer`, `group-small` or `group`. Will be `group` by default.",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "peer-to-peer",
                "group",
                "group-small"
              ],
              "type": "string"
            }
          },
          {
            "description": "Name of the Room.  This is unique for `in-progress` rooms. If not provided, Room name will be set to the Room Sid.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A URL that Twilio sends asynchronous webhook requests to on every room event. If not provided, status callback events will not be dispatched.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method Twilio should use when requesting the above URL. Defaults to `POST`.",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Maximum number of Participants in the Room. Peer-to-peer rooms can have a maximum of 10 Participants. Small Group rooms can have a max of 4 Participants. Group rooms can have a max of 50 Participants",
            "in": "query",
            "name": "MaxParticipants",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Start Participant recording when connected. ***This feature is not available in `peer-to-peer` rooms.***",
            "in": "query",
            "name": "RecordParticipantsOnConnect",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "An array of video codecs supported when publishing a Track in the Room.  `VP8` and `H264` codecs are supported.  ***This feature is not available in `peer-to-peer` rooms***",
            "in": "query",
            "name": "VideoCodecs",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "VP8",
                  "H264"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Region for the media server in Group Rooms.  Default region is `us1`.  See the list of [available Media Regions.](https://www.twilio.com/docs/api/video/ip-address-whitelisting#group-rooms-media-servers)***This feature is not available in `peer-to-peer` rooms.***",
            "in": "query",
            "name": "MediaRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "status"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Participants": {
      "description": "Participants in video rooms",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "A system-generated 34-character string that uniquely identifies this Room.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Only show Participants with the given Status.  For `in-progress` Rooms the default Status is `connected`, for `completed` Rooms only `disconnected` Participants are returned.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "connected",
                "disconnected"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only show Participants that connected to the Room using the provided Identity.",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only show Participants that started after this date, given as an [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC).",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only show Participants that started before this date, given as an [UTC ISO 8601 Timestamp](http://en.wikipedia.org/wiki/ISO_8601#UTC).",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "participants": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "status"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks": {
      "description": "Audio or video tracks being published by a participant",
      "get": {
        "description": "Returns a list of tracks associated with a given Participant. Only `currently` Published Tracks are in the list resource.",
        "parameters": [
          {
            "description": "Unique Room identifier where this Track is published.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier that publishes this Track.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "published_tracks": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_published_track"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "name",
        "enabled",
        "kind"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/PublishedTracks/{Sid}": {
      "description": "Audio or video tracks being published by a participant",
      "get": {
        "description": "Returns a single Track resource represented by `TrackNameOrSid`.",
        "parameters": [
          {
            "description": "Unique Room identifier where this Track is published.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier that publishes this Track.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_published_track"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "name",
        "enabled",
        "kind"
      ],
      "x-path-type": "instance"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/SubscribeRules": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a list of Subscribe Rules for the Participant.",
        "parameters": [
          {
            "description": "Unique Room identifier where the Subscribe Rules apply.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier to apply Subscribe Rules.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribe_rule"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update the Subscribe Rules for the Participant",
        "parameters": [
          {
            "description": "Unique Room identifier where the Subscribe Rules apply.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier to apply Subscribe Rules.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A JSON-encoded array of Subscribe Rules. See the [Specifying Subscribe Rules](https://www.twilio.com/docs/video/api/track-subscriptions#specifying-sr) section for further information.",
            "in": "query",
            "name": "Rules",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribe_rule"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "participant_sid",
        "room_sid",
        "rules"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/SubscribedTracks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a list of tracks that are subscribed for the participant.",
        "parameters": [
          {
            "description": "Unique Room identifier where the Tracks are subscribed.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier that subscribes to this Track.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "subscribed_tracks": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribed_track"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "name",
        "enabled",
        "kind"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/SubscribedTracks/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a single Track resource represented by `TrackSid`.  Note: This is one resource with the Video API that requires a Sid, as Track Name on the subscriber side is not guaranteed to be unique.",
        "parameters": [
          {
            "description": "Unique Room identifier where this Track is subscribed.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Unique Participant identifier that subscribes to this Track.",
            "in": "path",
            "name": "ParticipantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant.room_participant_subscribed_track"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "name",
        "enabled",
        "kind"
      ],
      "x-path-type": "instance"
    },
    "/v1/Rooms/{RoomSid}/Participants/{Sid}": {
      "description": "Participants in video rooms",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "A system-generated 34-character string that uniquely identifies a Room.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A system-generated 34-character string that uniquely identifies this Participant.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "A system-generated 34-character string that uniquely identifies a Room.",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A system-generated 34-character string that uniquely identifies this Participant.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Set to `disconnected` to remove participant.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "connected",
                "disconnected"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "status"
      ],
      "x-path-type": "instance"
    },
    "/v1/Rooms/{RoomSid}/Recordings": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "processing",
                "completed",
                "deleted",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "SourceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "DateCreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "DateCreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "recordings": {
                      "items": {
                        "$ref": "#/components/schemas/video.v1.room.room_recording"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "date_created",
        "status",
        "type",
        "duration",
        "codec"
      ],
      "x-path-type": "list"
    },
    "/v1/Rooms/{RoomSid}/Recordings/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "RoomSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room.room_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "date_created",
        "status",
        "type",
        "duration",
        "codec"
      ],
      "x-path-type": "instance"
    },
    "/v1/Rooms/{Sid}": {
      "description": "Video rooms with one or more participants",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The Room Sid or name that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Set to `completed` to end the Room.",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": {
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/video.v1.room"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://video.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "status"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "This product is Generally Available.",
      "name": "GA"
    },
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    },
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}