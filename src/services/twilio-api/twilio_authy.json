{
  "components": {
    "schemas": {
      "authy.v1.form": {
        "properties": {
          "form_meta": {
            "type": "object"
          },
          "form_type": {
            "enum": [
              "form-app-push",
              "form-sms",
              "form-totp"
            ],
            "type": "string"
          },
          "forms": {
            "type": "object"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "authy.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "authy.v1.service.entity": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "authy.v1.service.entity.factor": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "entity_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "factor_strength": {
            "enum": [
              "unknown",
              "very_low",
              "low",
              "medium",
              "high",
              "very_high"
            ],
            "type": "string"
          },
          "factor_type": {
            "enum": [
              "app-push",
              "sms",
              "totp"
            ],
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YF[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "unverified",
              "verified"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "authy.v1.service.entity.factor.challenge": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_responded": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "entity_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "expiration_date": {
            "format": "date-time",
            "type": "string"
          },
          "factor_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YF[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "factor_strength": {
            "enum": [
              "unknown",
              "very_low",
              "low",
              "medium",
              "high",
              "very_high"
            ],
            "type": "string"
          },
          "factor_type": {
            "enum": [
              "app-push",
              "sms",
              "totp"
            ],
            "type": "string"
          },
          "hidden_details": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "responded_reason": {
            "enum": [
              "none",
              "not_needed",
              "not_requested"
            ],
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^YC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "pending",
              "expired",
              "approved",
              "denied"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Forms/{FormType}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch the forms for a specific Form Type.",
        "parameters": [
          {
            "description": "The Type of this Form. One of `form-app-push`, `form-sms` or `form-totp`.",
            "in": "path",
            "name": "FormType",
            "required": true,
            "schema": {
              "enum": [
                "form-app-push",
                "form-sms",
                "form-totp"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.form"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "form_type"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Services for an Account.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/authy.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Service for the Account",
        "parameters": [
          {
            "description": "A human readable description of this resource, up to 64 characters.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Entities": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Entities for a Service.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "entities": {
                      "items": {
                        "$ref": "#/components/schemas/authy.v1.service.entity"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Entity for the Service",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity of the Service",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}": {
      "delete": {
        "description": "Delete a specific Entity.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity of the Service",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Entity.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity of the Service",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Factors for an Entity.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Factor",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "factors": {
                      "items": {
                        "$ref": "#/components/schemas/authy.v1.service.entity.factor"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Factor for the Entity",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Factor",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique binding for this Factor that identifies it. E.g. a phone number for `sms` factors. Required when creating a new Factor. This value is never returned because it can contain customer secrets.",
            "in": "query",
            "name": "Binding",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The friendly name of this Factor",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Type of this Factor. One of `app-push`, `sms`, `totp`, etc.",
            "in": "query",
            "name": "FactorType",
            "required": true,
            "schema": {
              "enum": [
                "app-push",
                "sms",
                "totp"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status",
        "factor_type"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{FactorSid}/Challenges": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Create a new Challenge for the Factor",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Factor.",
            "in": "path",
            "name": "FactorSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The future date in which this Challenge will expire, given in ISO 8601 format (https://en.wikipedia.org/wiki/ISO_8601).",
            "in": "query",
            "name": "ExpirationDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Details provided to give context about the Challenge. Shown to the end user.",
            "in": "query",
            "name": "Details",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Details provided to give context about the Challenge. Not shown to the end user.",
            "in": "query",
            "name": "HiddenDetails",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor.challenge"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "factor_type",
        "status",
        "responded_reason",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{FactorSid}/Challenges/{Sid}": {
      "delete": {
        "description": "Delete a specific Challenge.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Factor.",
            "in": "path",
            "name": "FactorSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Challenge.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Challenge.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Factor.",
            "in": "path",
            "name": "FactorSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Challenge. It also allows the keyword `latest` to fetch the most recent active Challenge created for a Factor.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor.challenge"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Verify a specific Challenge.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Challenge",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Factor.",
            "in": "path",
            "name": "FactorSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Challenge. It also allows the keyword `latest` to fetch the most recent active Challenge created for a Factor.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The optional payload needed to verify the Challenge. E.g., a TOTP would use the numeric code.",
            "in": "query",
            "name": "AuthPayload",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor.challenge"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "factor_type",
        "status",
        "responded_reason",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Entities/{Identity}/Factors/{Sid}": {
      "delete": {
        "description": "Delete a specific Factor.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Factor",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Factor.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Factor.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Factor",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Factor.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Factor. This endpoint can be used to Verify a Factor if passed an `AuthPayload` param.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Customer unique identity for the Entity owner of the Factor",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this Factor.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^YF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The optional payload needed to verify the Factor for the first time. E.g. for a TOTP, the numeric code.",
            "in": "query",
            "name": "AuthPayload",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service.entity.factor"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status",
        "factor_type"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": "Delete a specific Service.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this Service.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Service.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this Service.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Service.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this Service.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource, up to 64 characters.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authy.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://authy.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}