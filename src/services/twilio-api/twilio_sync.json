{
  "components": {
    "schemas": {
      "sync.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "acl_enabled": {
            "type": "boolean"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "reachability_debouncing_enabled": {
            "type": "boolean"
          },
          "reachability_debouncing_window": {
            "type": "integer"
          },
          "reachability_webhooks_enabled": {
            "type": "boolean"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "webhook_url": {
            "format": "uri",
            "type": "string"
          },
          "webhooks_from_rest_enabled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "sync.v1.service.document": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "revision": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ET[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.document.document_permission": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "document_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ET[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "manage": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "write": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_list": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "revision": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_list.sync_list_item": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "list_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "revision": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_list.sync_list_permission": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "list_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "manage": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "write": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_map": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "revision": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_map.sync_map_item": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "map_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "revision": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_map.sync_map_permission": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "manage": {
            "type": "boolean"
          },
          "map_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "write": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_stream": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_expires": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^TO[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sync.v1.service.sync_stream.stream_message": {
        "properties": {
          "data": {
            "type": "object"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^TZ[0-9a-fA-F]{32}$",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Services": {
      "description": "Containers for sync objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "Human-readable name for this service instance",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A URL that will receive event updates when objects are manipulated.",
            "in": "query",
            "name": "WebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "`true` or `false` - controls whether this instance fires webhooks when client endpoints connect to Sync Defaults to false.",
            "in": "query",
            "name": "ReachabilityWebhooksEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true` or `false` - determines whether token identities must be granted access to Sync objects via the [Permissions API](https://www.twilio.com/docs/api/sync/rest/sync-rest-api-permissions) in this Service.",
            "in": "query",
            "name": "AclEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true` or `false` - If false, every endpoint disconnection immediately yields a reachability webhook (if enabled). If true, then 'disconnection' webhook events will only be fired after a configurable delay. Intervening reconnections would effectively cancel that webhook. Defaults to false.",
            "in": "query",
            "name": "ReachabilityDebouncingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Reachability webhook delay period in milliseconds. Determines the delay after which a Sync identity is declared actually offline, measured from the moment the last running client disconnects. If all endpoints remain offline throughout this delay, then reachability webhooks will be fired (if enabled). A reconnection by any endpoint during this window \u2014 from the same identity \u2014 means no reachability webhook would be fired. Must be between 1000 and 30000. Defaults to 5000.",
            "in": "query",
            "name": "ReachabilityDebouncingWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "`true` or `false` - controls whether this instance fires webhooks when Sync objects are updated through REST. Defaults to false.",
            "in": "query",
            "name": "WebhooksFromRestEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Documents": {
      "description": "Sync document objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.document"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable name for this document",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "JSON data to be stored in this document",
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Time-to-live of this Document in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
      "description": "Sync document permissions",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Document.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.document.document_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync Document Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Sync document permissions",
      "get": {
        "description": "Fetch a specific Sync Document Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.document.document_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Document.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can read the Sync Document.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can update the Sync Document.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can delete the Sync Document.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.document.document_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Documents/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Sync document objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Contains an arbitrary JSON object to be stored in this Document. Serialized to string to respect HTTP form input, up to 16KB.",
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "New time-to-live of this Document in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Lists": {
      "description": "Sync list objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "lists": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_list"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable name for this list",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Items": {
      "description": "Items in a sync list",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string; `asc` or `desc`",
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": "An integer representing Item index offset (inclusive). If not present, query is performed from the start or end, depending on the Order query parameter.",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "Bounds",
            "required": false,
            "schema": {
              "enum": [
                "inclusive",
                "exclusive"
              ],
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_item"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Contains arbitrary user-defined, schema-less data that this List Item stores, represented by a JSON object, up to 16KB.",
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the list item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "in": "query",
            "name": "ItemTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item's parent List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the list item's data or ttl is updated in the same request.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "index",
        "revision",
        "created_by"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Items in a sync list",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Contains arbitrary user-defined, schema-less data that this List Item stores, represented by a JSON object, up to 16KB.",
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the list item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "in": "query",
            "name": "ItemTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item's parent List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the list item's data or ttl is updated in the same request.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "index",
        "revision",
        "created_by"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
      "description": "Permissions for sync list items",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync List.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync List Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Permissions for sync list items",
      "get": {
        "description": "Fetch a specific Sync List Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync List.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can read the Sync List.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can delete the Sync List.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list.sync_list_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Lists/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Sync list objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this List in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Maps": {
      "description": "Sync map objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maps": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_map"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable name for this map",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Items": {
      "description": "Keys in a sync map",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string; asc or desc. Map Items are [ordered lexicographically](https://en.wikipedia.org/wiki/Lexicographical_order) by Item key.",
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": "The Item key offset (including the specified key). If not present, query is performed from the start or end, depending on the Order query parameter.",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "Bounds",
            "required": false,
            "schema": {
              "enum": [
                "inclusive",
                "exclusive"
              ],
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_item"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique user-defined key of this Map Item. Up to 320 characters long.",
            "in": "query",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Contains arbitrary user-defined, schema-less data that this Map Item stores, represented by a JSON object, up to 16KB.",
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the map item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "in": "query",
            "name": "ItemTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item's parent Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the map item's data or ttl is updated in the same request.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "key",
        "revision",
        "created_by"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Keys in a sync map",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Contains an arbitrary JSON object to be stored in this Map Item. Serialized to string to respect HTTP form input, up to 16KB.",
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Alias for item_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. Upon expiry, the map item will be cleaned up at least in a matter of hours, and often within seconds, making this a good tool for garbage management.",
            "in": "query",
            "name": "ItemTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Time-to-live of this item's parent Map in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity. This parameter can only be used when the map item's data or ttl is updated in the same request.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "key",
        "revision",
        "created_by"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
      "description": "Permissions for sync map keys",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Map.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync Map Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Permissions for sync map keys",
      "get": {
        "description": "Fetch a specific Sync Map Permission.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Map.",
        "parameters": [
          {
            "description": "Identifier of the Sync Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can read the Sync Map.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Boolean flag specifying whether the identity can delete the Sync Map.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map.sync_map_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "read",
        "write",
        "manage"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Maps/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Sync map objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Alias for collection_ttl. If both are provided, this value is ignored.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "New time-to-live of this Map in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "CollectionTtl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_map"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "revision"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Streams": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Streams in a Service Instance.",
        "parameters": [
          {
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "streams": {
                      "items": {
                        "$ref": "#/components/schemas/sync.v1.service.sync_stream"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Stream.",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique and addressable name of this Stream. Optional, up to 320 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Time-to-live of this Stream in seconds, defaults to no expiration. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "created_by"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Streams/{Sid}": {
      "delete": {
        "description": "Delete a specific Stream.",
        "parameters": [
          {
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Stream. Either a SID or a unique name.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Stream.",
        "parameters": [
          {
            "description": "Identifier of the Service Instance. Either a SID or 'default'.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Stream. Either a SID or a unique name.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update a specific Stream.",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "New time-to-live of this Stream in seconds. In the range [1, 31 536 000 (1 year)], or 0 for infinity.",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "created_by"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Streams/{StreamSid}/Messages": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Create a new Stream Message.",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "StreamSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The body of the Stream Message. Arbitrary JSON object, maximum size 4KB.",
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service.sync_stream.stream_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "A unique identifier for this service instance.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "Containers for sync objects",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "A unique identifier for this service instance.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "A unique identifier for this service instance.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A URL that will receive event updates when objects are manipulated.",
            "in": "query",
            "name": "WebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Human-readable name for this service instance",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "True or false - controls whether this instance fires webhooks when client endpoints connect to Sync Defaults to false.",
            "in": "query",
            "name": "ReachabilityWebhooksEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true` or `false` - determines whether token identities must be granted access to Sync objects via the [Permissions API](https://www.twilio.com/docs/api/sync/rest/sync-rest-api-permissions) in this Service.",
            "in": "query",
            "name": "AclEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "`true` or `false` - If false, every endpoint disconnection immediately yields a reachability webhook (if enabled). If true, then 'disconnection' webhook events will only be fired after a configurable delay. Intervening reconnections would effectively cancel that webhook. Defaults to false.",
            "in": "query",
            "name": "ReachabilityDebouncingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Reachability webhook delay period in milliseconds. Determines the delay after which a Sync identity is declared actually offline, measured from the moment the last running client disconnects. If all endpoints remain offline throughout this delay, then reachability webhooks will be fired (if enabled). A reconnection by any endpoint during this window \u2014 from the same identity \u2014 means no reachability webhook would be fired. Must be between 1000 and 30000. Defaults to 5000.",
            "in": "query",
            "name": "ReachabilityDebouncingWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "`true` or `false` - controls whether this instance fires webhooks when Sync objects are updated through REST. Defaults to false.",
            "in": "query",
            "name": "WebhooksFromRestEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sync.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://sync.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    }
  ]
}