{
  "components": {
    "schemas": {
      "conversations.v1.conversation": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "chat_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_message": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "media": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "participant_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_participant": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "messaging_binding": {
            "type": "object"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_scoped_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "configuration": {
            "type": "object"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "method": {
            "enum": [
              "GET",
              "POST"
            ],
            "type": "string"
          },
          "post_webhook_url": {
            "type": "string"
          },
          "pre_webhook_url": {
            "type": "string"
          },
          "target": {
            "enum": [
              "webhook",
              "flex"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Conversations": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversations": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "FriendlyName": {
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
                    "type": "string"
                  },
                  "MessagingServiceSid": {
                    "description": "The unique id of the [SMS Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                    "maxLength": 34,
                    "minLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "chat_service_sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Filters": {
                    "description": "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "Method": {
                    "description": "The HTTP method to be used when sending a webhook request.",
                    "type": "string"
                  },
                  "PostWebhookUrl": {
                    "description": "The absolute url the post-event webhook request should be sent to.",
                    "type": "string"
                  },
                  "PreWebhookUrl": {
                    "description": "The absolute url the pre-event webhook request should be sent to.",
                    "type": "string"
                  },
                  "Target": {
                    "description": "The routing target of the webhook. Can be ordinary or route internally to Flex",
                    "enum": [
                      "webhook",
                      "flex"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "target",
        "method",
        "pre_webhook_url",
        "post_webhook_url"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Messages": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "Author": {
                    "description": "The channel specific identifier of the message's author. Defaults to `system`.",
                    "type": "string"
                  },
                  "Body": {
                    "description": "The content of the message, can be up to 1,600 characters long.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated. `null` if the message has not been edited.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "MediaSid": {
                    "description": "The Media Sid to be attached to the new Message.",
                    "maxLength": 34,
                    "minLength": 34,
                    "pattern": "^ME[0-9a-fA-F]{32}$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Messages/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "Author": {
                    "description": "The channel specific identifier of the message's author. Defaults to `system`.",
                    "type": "string"
                  },
                  "Body": {
                    "description": "The content of the message, can be up to 1,600 characters long.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated. `null` if the message has not been edited.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Participants": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "participants": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "Identity": {
                    "description": "A unique string identifier for the conversation participant as [Chat User](https://www.twilio.com/docs/chat/rest/user-resource). This parameter is non-null if (and only if) the participant is using the Programmable Chat SDK to communicate. Limited to 256 characters.",
                    "type": "string"
                  },
                  "MessagingBinding.Address": {
                    "description": "The address of the participant's device, e.g. a phone number or Messenger ID. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from a Chat endpoint (see the 'identity' field).",
                    "type": "string"
                  },
                  "MessagingBinding.ProjectedAddress": {
                    "description": "The address of the Twilio phone number that is used in Group MMS. Communication mask for the Chat participant with Identity.",
                    "type": "string"
                  },
                  "MessagingBinding.ProxyAddress": {
                    "description": "The address of the Twilio phone number (or WhatsApp number, or Messenger Page ID) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from a Chat endpoint (see the 'identity' field).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "messaging_binding"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Participants/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "messaging_binding"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "webhooks": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Configuration.Filters": {
                    "description": "The list of events, firing webhook event for this Conversation.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "Configuration.FlowSid": {
                    "description": "The studio flow sid, where the webhook should be sent to.",
                    "maxLength": 34,
                    "minLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "type": "string"
                  },
                  "Configuration.Method": {
                    "description": "The HTTP method to be used when sending a webhook request.",
                    "enum": [
                      "GET",
                      "POST"
                    ],
                    "type": "string"
                  },
                  "Configuration.ReplayAfter": {
                    "description": "The message index for which and it's successors the webhook will be replayed. Not set by default",
                    "type": "integer"
                  },
                  "Configuration.Triggers": {
                    "description": "The list of keywords, firing webhook event for this Conversation.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "Configuration.Url": {
                    "description": "The absolute url the webhook request should be sent to.",
                    "type": "string"
                  },
                  "Target": {
                    "description": "The target of this webhook: `webhook`, `studio`, `trigger`",
                    "enum": [
                      "webhook",
                      "trigger",
                      "studio"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "Target"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The unique id of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Configuration.Filters": {
                    "description": "The list of events, firing webhook event for this Conversation.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "Configuration.FlowSid": {
                    "description": "The studio flow sid, where the webhook should be sent to.",
                    "maxLength": 34,
                    "minLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "type": "string"
                  },
                  "Configuration.Method": {
                    "description": "The HTTP method to be used when sending a webhook request.",
                    "enum": [
                      "GET",
                      "POST"
                    ],
                    "type": "string"
                  },
                  "Configuration.Triggers": {
                    "description": "The list of keywords, firing webhook event for this Conversation.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "Configuration.Url": {
                    "description": "The absolute url the webhook request should be sent to.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Attributes": {
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                    "type": "string"
                  },
                  "DateCreated": {
                    "description": "The date that this resource was created.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "DateUpdated": {
                    "description": "The date that this resource was last updated.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "FriendlyName": {
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional.",
                    "type": "string"
                  },
                  "MessagingServiceSid": {
                    "description": "The unique id of the [SMS Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                    "maxLength": 34,
                    "minLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "chat_service_sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    }
  ]
}