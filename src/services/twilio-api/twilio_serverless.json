{
  "components": {
    "schemas": {
      "serverless.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "include_credentials": {
            "type": "boolean"
          },
          "links": {
            "type": "object"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.asset": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.asset.asset_version": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "asset_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "visibility": {
            "enum": [
              "public",
              "private",
              "protected"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.build": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "asset_versions": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "dependencies": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "function_versions": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "building",
              "completed",
              "failed"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.environment": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "build_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "domain_suffix": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.environment.deployment": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "build_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "environment_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZD[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.environment.log": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "deployment_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZD[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "environment_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "function_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "level": {
            "enum": [
              "info",
              "warn",
              "error"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RQ[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.environment.variable": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "environment_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZV[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.function": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.v1.service.function.function_version": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "function_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^ZN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "visibility": {
            "enum": [
              "public",
              "private",
              "protected"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Services": {
      "description": "The top-level resource for a Serverless application, which serves as a container for the application Environments.",
      "get": {
        "description": "Retrieve a list of all Services.",
        "parameters": [
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Service.",
        "parameters": [
          {
            "description": "A unique, addressable name of this Service which forms part of the domain name, fewer than 256 characters. Required.",
            "in": "query",
            "name": "UniqueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A human-readable description of this Service, fewer than 256 characters. Required",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A boolean value that indicates whether to inject Account credentials into a Function invocation context. Optional, default `false`.",
            "in": "query",
            "name": "IncludeCredentials",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Assets": {
      "description": "A wrapper that represents a static file and groups the different Versions of this static file.",
      "get": {
        "description": "Retrieve a list of all Assets.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Assets.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assets": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.asset"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Asset.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Asset.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human-readable description of this Asset, fewer than 256 characters. Required.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions": {
      "description": "The content of an Asset.",
      "get": {
        "description": "Retrieve a list of all Asset Versions.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Asset Versions.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Asset that is the parent for these Asset Versions.",
            "in": "path",
            "name": "AssetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "asset_versions": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.asset.asset_version"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "path",
        "visibility",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions/{Sid}": {
      "description": "The content of an Asset.",
      "get": {
        "description": "Retrieve a specific Asset Version.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Asset Version.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Asset that is the parent for this Asset Version.",
            "in": "path",
            "name": "AssetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Asset Version.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset.asset_version"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "path",
        "visibility",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Assets/{Sid}": {
      "delete": {
        "description": "Delete an Asset.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Assets.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Asset.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "A wrapper that represents a static file and groups the different Versions of this static file.",
      "get": {
        "description": "Retrieve a specific Asset.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Asset.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Asset.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Asset.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Asset.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Asset.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human-readable description of this Asset, fewer than 256 characters. Required.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Builds": {
      "description": "A collection of Function Versions, Asset Versions, and Dependencies that form a deployable unit.",
      "get": {
        "description": "Retrieve a list of all Builds.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Builds.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "builds": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.build"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Build. At least one Function Version or Asset Version is required.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Build.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The list of Asset Version Sids that are included in this Build. Optional.",
            "in": "query",
            "name": "AssetVersions",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^ZN[0-9a-fA-F]{32}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of Function Version Sids that are included in this Build. Optional.",
            "in": "query",
            "name": "FunctionVersions",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^ZN[0-9a-fA-F]{32}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of Dependencies that are included in this Build, each described by a `name` and a `version` in a JSON object. Optional.",
            "in": "query",
            "name": "Dependencies",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.build"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Builds/{Sid}": {
      "delete": {
        "description": "Delete a Build.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for the Build.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Build.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "A collection of Function Versions, Asset Versions, and Dependencies that form a deployable unit.",
      "get": {
        "description": "Retrieve a specific Build.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Build.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Build.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.build"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Environments": {
      "description": "Represents a deployed Build of a given set of Functions and/or Assets at a specific URL.",
      "get": {
        "description": "Retrieve a list of all Environments.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Environments.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "environments": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Environment.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Environment.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A unique, addressable name of this Environment, fewer than 256 characters. Required.",
            "in": "query",
            "name": "UniqueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A URL-friendly name that represents this Environment and forms part of the domain name, fewer than 32 characters. Required.",
            "in": "query",
            "name": "DomainSuffix",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "domain_name",
        "build_sid"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments": {
      "description": "An association of a Build with an Environment so that the Build is published in the Environment.",
      "get": {
        "description": "Retrieve a list of all Deployments.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Deployments.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment for these Deployments.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "deployments": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Deployment.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Deployment.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment for this Deployment.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Build to be deployed for this Deployment. Required.",
            "in": "query",
            "name": "BuildSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "build_sid",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments/{Sid}": {
      "description": "An association of a Build with an Environment so that the Build is published in the Environment.",
      "get": {
        "description": "Retrieve a specific Deployment.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Deployment.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment for this Deployment.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Deployment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "build_sid",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs": {
      "description": "A record of an event that occurred related to a Function invocation.",
      "get": {
        "description": "Retrieve a list of all Logs.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Logs.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which these Logs occurred.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Function whose invocation produced this Log.",
            "in": "query",
            "name": "FunctionSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "logs": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.log"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs/{Sid}": {
      "description": "A record of an event that occurred related to a Function invocation.",
      "get": {
        "description": "Retrieve a specific Log.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Log.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which this Log occurred.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Log.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.log"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables": {
      "description": "A key and value pair that is specific to an Environment.",
      "get": {
        "description": "Retrieve a list of all Variables.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Variables.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which these Variables exist.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "variables": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Variable.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Variable.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which this Variable exists.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string by which this Variable can be referenced, fewer than 128 characters. Required.",
            "in": "query",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string that contains the actual value of this Variable, less than 450 bytes. Required.",
            "in": "query",
            "name": "Value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "key",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}": {
      "delete": {
        "description": "Delete a specific Variable.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Variable.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which this Variable exists.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Variable.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "A key and value pair that is specific to an Environment.",
      "get": {
        "description": "Retrieve a specific Variable.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Variable.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which this Variable exists.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Variable.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Variable.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Variable.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Environment in which this Variable exists.",
            "in": "path",
            "name": "EnvironmentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Variable.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string by which this Variable can be referenced, fewer than 128 characters. Optional.",
            "in": "query",
            "name": "Key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string that contains the actual value of this Variable, less than 450 bytes. Optional.",
            "in": "query",
            "name": "Value",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "key",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Environments/{Sid}": {
      "delete": {
        "description": "Delete a specific Environment.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Environment.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Environment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "Represents a deployed Build of a given set of Functions and/or Assets at a specific URL.",
      "get": {
        "description": "Retrieve a specific Environment.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Environment.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Environment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "domain_name",
        "build_sid"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Functions": {
      "description": "A wrapper that represents a Serverless JavaScript function and groups the different  and groups the different Versions of this code.",
      "get": {
        "description": "Retrieve a list of all Functions.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Functions.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "functions": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.function"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Function.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Function.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human-readable description of this Function, fewer than 256 characters. Required.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions": {
      "description": "The content of a Function.",
      "get": {
        "description": "Retrieve a list of all Function Versions.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Function Versions.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Function that is the parent for this Function Version.",
            "in": "path",
            "name": "FunctionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "function_versions": {
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.function.function_version"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "path",
        "visibility",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions/{Sid}": {
      "description": "The content of a Function.",
      "get": {
        "description": "Retrieve a specific Function Version.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Function Version.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of the Function that is the parent for this Function Version.",
            "in": "path",
            "name": "FunctionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Function Version.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function.function_version"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "path",
        "visibility",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/Functions/{Sid}": {
      "delete": {
        "description": "Delete a Function.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for these Functions.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Function.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "A wrapper that represents a Serverless JavaScript function and groups the different  and groups the different Versions of this code.",
      "get": {
        "description": "Retrieve a specific Function.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Function.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Function.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Function.",
        "parameters": [
          {
            "description": "The unique SID identifier of the Service for this Function.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique SID identifier of this Function.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human-readable description of this Function, fewer than 256 characters. Required.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": "Delete a Service.",
        "parameters": [
          {
            "description": "Identifier of the Serverless Service Instance. Either a SID or UniqueName.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "The top-level resource for a Serverless application, which serves as a container for the application Environments.",
      "get": {
        "description": "Retrieve a specific Service.",
        "parameters": [
          {
            "description": "Identifier of the Serverless Service Instance. Either a SID or UniqueName.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Service.",
        "parameters": [
          {
            "description": "The unique SID identifier of this Service.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ZS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A boolean value that indicates whether to inject Account credentials into a Function invocation context. Optional.",
            "in": "query",
            "name": "IncludeCredentials",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A human-readable description of this Service, fewer than 256 characters. Optional",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}